"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-youtube";
exports.ids = ["vendor-chunks/react-youtube"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-youtube/dist/YouTube.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/react-youtube/dist/YouTube.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ YouTube_default)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fast-deep-equal */ \"(ssr)/./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var youtube_player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! youtube-player */ \"(ssr)/./node_modules/youtube-player/dist/index.js\");\n/* harmony import */ var youtube_player__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(youtube_player__WEBPACK_IMPORTED_MODULE_2__);\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\n// src/YouTube.tsx\n\n\n\n\nfunction shouldUpdateVideo(prevProps, props) {\n    var _a, _b;\n    if (prevProps.videoId !== props.videoId) {\n        return true;\n    }\n    const prevVars = ((_a = prevProps.opts) == null ? void 0 : _a.playerVars) || {};\n    const vars = ((_b = props.opts) == null ? void 0 : _b.playerVars) || {};\n    return prevVars.start !== vars.start || prevVars.end !== vars.end;\n}\nfunction filterResetOptions(opts = {}) {\n    return __spreadProps(__spreadValues({}, opts), {\n        height: 0,\n        width: 0,\n        playerVars: __spreadProps(__spreadValues({}, opts.playerVars), {\n            autoplay: 0,\n            start: 0,\n            end: 0\n        })\n    });\n}\nfunction shouldResetPlayer(prevProps, props) {\n    return prevProps.videoId !== props.videoId || !fast_deep_equal__WEBPACK_IMPORTED_MODULE_1___default()(filterResetOptions(prevProps.opts), filterResetOptions(props.opts));\n}\nfunction shouldUpdatePlayer(prevProps, props) {\n    var _a, _b, _c, _d;\n    return prevProps.id !== props.id || prevProps.className !== props.className || ((_a = prevProps.opts) == null ? void 0 : _a.width) !== ((_b = props.opts) == null ? void 0 : _b.width) || ((_c = prevProps.opts) == null ? void 0 : _c.height) !== ((_d = props.opts) == null ? void 0 : _d.height) || prevProps.iframeClassName !== props.iframeClassName || prevProps.title !== props.title;\n}\nvar defaultProps = {\n    videoId: \"\",\n    id: \"\",\n    className: \"\",\n    iframeClassName: \"\",\n    style: {},\n    title: \"\",\n    loading: void 0,\n    opts: {},\n    onReady: ()=>{},\n    onError: ()=>{},\n    onPlay: ()=>{},\n    onPause: ()=>{},\n    onEnd: ()=>{},\n    onStateChange: ()=>{},\n    onPlaybackRateChange: ()=>{},\n    onPlaybackQualityChange: ()=>{}\n};\nvar propTypes = {\n    videoId: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    id: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    iframeClassName: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    style: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().object),\n    title: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string),\n    loading: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf([\n        \"lazy\",\n        \"eager\"\n    ]),\n    opts: prop_types__WEBPACK_IMPORTED_MODULE_3___default().objectOf((prop_types__WEBPACK_IMPORTED_MODULE_3___default().any)),\n    onReady: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onError: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPlay: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPause: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onEnd: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onStateChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPlaybackRateChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func),\n    onPlaybackQualityChange: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func)\n};\nvar _YouTube = class extends (react__WEBPACK_IMPORTED_MODULE_0___default().Component) {\n    constructor(props){\n        super(props);\n        this.destroyPlayerPromise = void 0;\n        this.onPlayerReady = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onReady) == null ? void 0 : _b.call(_a, event);\n        };\n        this.onPlayerError = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onError) == null ? void 0 : _b.call(_a, event);\n        };\n        this.onPlayerStateChange = (event)=>{\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            (_b = (_a = this.props).onStateChange) == null ? void 0 : _b.call(_a, event);\n            switch(event.data){\n                case _YouTube.PlayerState.ENDED:\n                    (_d = (_c = this.props).onEnd) == null ? void 0 : _d.call(_c, event);\n                    break;\n                case _YouTube.PlayerState.PLAYING:\n                    (_f = (_e = this.props).onPlay) == null ? void 0 : _f.call(_e, event);\n                    break;\n                case _YouTube.PlayerState.PAUSED:\n                    (_h = (_g = this.props).onPause) == null ? void 0 : _h.call(_g, event);\n                    break;\n                default:\n            }\n        };\n        this.onPlayerPlaybackRateChange = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onPlaybackRateChange) == null ? void 0 : _b.call(_a, event);\n        };\n        this.onPlayerPlaybackQualityChange = (event)=>{\n            var _a, _b;\n            return (_b = (_a = this.props).onPlaybackQualityChange) == null ? void 0 : _b.call(_a, event);\n        };\n        this.destroyPlayer = ()=>{\n            if (this.internalPlayer) {\n                this.destroyPlayerPromise = this.internalPlayer.destroy().then(()=>this.destroyPlayerPromise = void 0);\n                return this.destroyPlayerPromise;\n            }\n            return Promise.resolve();\n        };\n        this.createPlayer = ()=>{\n            if (typeof document === \"undefined\") return;\n            if (this.destroyPlayerPromise) {\n                this.destroyPlayerPromise.then(this.createPlayer);\n                return;\n            }\n            const playerOpts = __spreadProps(__spreadValues({}, this.props.opts), {\n                videoId: this.props.videoId\n            });\n            this.internalPlayer = youtube_player__WEBPACK_IMPORTED_MODULE_2___default()(this.container, playerOpts);\n            this.internalPlayer.on(\"ready\", this.onPlayerReady);\n            this.internalPlayer.on(\"error\", this.onPlayerError);\n            this.internalPlayer.on(\"stateChange\", this.onPlayerStateChange);\n            this.internalPlayer.on(\"playbackRateChange\", this.onPlayerPlaybackRateChange);\n            this.internalPlayer.on(\"playbackQualityChange\", this.onPlayerPlaybackQualityChange);\n            if (this.props.title || this.props.loading) {\n                this.internalPlayer.getIframe().then((iframe)=>{\n                    if (this.props.title) iframe.setAttribute(\"title\", this.props.title);\n                    if (this.props.loading) iframe.setAttribute(\"loading\", this.props.loading);\n                });\n            }\n        };\n        this.resetPlayer = ()=>this.destroyPlayer().then(this.createPlayer);\n        this.updatePlayer = ()=>{\n            var _a;\n            (_a = this.internalPlayer) == null ? void 0 : _a.getIframe().then((iframe)=>{\n                if (this.props.id) iframe.setAttribute(\"id\", this.props.id);\n                else iframe.removeAttribute(\"id\");\n                if (this.props.iframeClassName) iframe.setAttribute(\"class\", this.props.iframeClassName);\n                else iframe.removeAttribute(\"class\");\n                if (this.props.opts && this.props.opts.width) iframe.setAttribute(\"width\", this.props.opts.width.toString());\n                else iframe.removeAttribute(\"width\");\n                if (this.props.opts && this.props.opts.height) iframe.setAttribute(\"height\", this.props.opts.height.toString());\n                else iframe.removeAttribute(\"height\");\n                if (this.props.title) iframe.setAttribute(\"title\", this.props.title);\n                else iframe.setAttribute(\"title\", \"YouTube video player\");\n                if (this.props.loading) iframe.setAttribute(\"loading\", this.props.loading);\n                else iframe.removeAttribute(\"loading\");\n            });\n        };\n        this.getInternalPlayer = ()=>{\n            return this.internalPlayer;\n        };\n        this.updateVideo = ()=>{\n            var _a, _b, _c, _d;\n            if (typeof this.props.videoId === \"undefined\" || this.props.videoId === null) {\n                (_a = this.internalPlayer) == null ? void 0 : _a.stopVideo();\n                return;\n            }\n            let autoplay = false;\n            const opts = {\n                videoId: this.props.videoId\n            };\n            if ((_b = this.props.opts) == null ? void 0 : _b.playerVars) {\n                autoplay = this.props.opts.playerVars.autoplay === 1;\n                if (\"start\" in this.props.opts.playerVars) {\n                    opts.startSeconds = this.props.opts.playerVars.start;\n                }\n                if (\"end\" in this.props.opts.playerVars) {\n                    opts.endSeconds = this.props.opts.playerVars.end;\n                }\n            }\n            if (autoplay) {\n                (_c = this.internalPlayer) == null ? void 0 : _c.loadVideoById(opts);\n                return;\n            }\n            (_d = this.internalPlayer) == null ? void 0 : _d.cueVideoById(opts);\n        };\n        this.refContainer = (container)=>{\n            this.container = container;\n        };\n        this.container = null;\n        this.internalPlayer = null;\n    }\n    componentDidMount() {\n        this.createPlayer();\n    }\n    componentDidUpdate(prevProps) {\n        return __async(this, null, function*() {\n            if (shouldUpdatePlayer(prevProps, this.props)) {\n                this.updatePlayer();\n            }\n            if (shouldResetPlayer(prevProps, this.props)) {\n                yield this.resetPlayer();\n            }\n            if (shouldUpdateVideo(prevProps, this.props)) {\n                this.updateVideo();\n            }\n        });\n    }\n    componentWillUnmount() {\n        this.destroyPlayer();\n    }\n    render() {\n        return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            className: this.props.className,\n            style: this.props.style\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n            id: this.props.id,\n            className: this.props.iframeClassName,\n            ref: this.refContainer\n        }));\n    }\n};\nvar YouTube = _YouTube;\nYouTube.propTypes = propTypes;\nYouTube.defaultProps = defaultProps;\nYouTube.PlayerState = {\n    UNSTARTED: -1,\n    ENDED: 0,\n    PLAYING: 1,\n    PAUSED: 2,\n    BUFFERING: 3,\n    CUED: 5\n};\nvar YouTube_default = YouTube;\n //# sourceMappingURL=YouTube.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-youtube/dist/YouTube.esm.js\n");

/***/ })

};
;